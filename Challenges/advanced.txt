How would you go about splitting your data into training and test data without using any external libraries
How would you go about building a linear regression model without using sklearn
Write a program using BeautifulSoup to find the title tags from an html site of your choosing. If you may need to first install beautifulsoup4 in your environment (pip install beautifulsoup4 or !pip install beautifulsoup4 on your Jupyter Notebook) and then import it (from bs4 import BeautifulSoup).
Write a function using BeautifulSoup to get the number of paragraph tags in an html site of your choosing.
Write a function to extract all the text from a web page of your choosing using BeautifulSoup
Write a function to find and print all li tags from a web page of your choosing using BeautifulSoup
Here is an interesting challenge: Build a regressor that recommends the crew size for potential ship buyers. Carry out basic statistics to examine and better understand the dataset, create visualizations that tell a story about the data and explain your insights and then proceed to build a regressor, along with a metric measuring the performance of your algorithm(s). Save the output in GitHub and share a link to your submission on Slack. Here is your dataset: https://raw.githubusercontent.com/bot13956/ML_Model_for_Predicting_Ships_Crew_Size/master/cruise_ship_info.csv
URLs can be extremely long and not user-friendly. When people share links or even try to remember a URL, it’s difficult because most URLs are filled with more difficult characters and don’t form meaningful words. This is where the URL Shortener comes in. A URL Shortener reduces the characters or letters in a URL, making them easier to read and remember. A URL like xyz.com/wwryb78&svnhkn%sghq?sfiyh can be shortened to xyz.com/piojwr. Build your own url shortener
We have daily expenses, from groceries to clothing to bills. There are so many expenses that it’s normal to lose track of them and keep spending till we’re almost out of cash. A tracker can help people watch their expenses. This is where the expense tracker comes in. An expense tracker is a software tool that allows users to keep track of their expenses. It can also analyze the expenses, depending on how advanced it is, but let’s keep it simple for now. With the expense tracker, users can set a budget and track their spending so as to make better financial decisions. Build your own expense tracker
When you visit a URL, you expect to get the requested pages on your browser. But this is not always the case. Sometimes, sites can be down, so you won’t get the desired results. Instead, you’ll be presented with error messages. You can keep trying a site that is down, till it comes up and you get the information you need. This is where the Site Connectivity Checker project comes in. The Site Connectivity Checker visits a URL and returns the status of the URL: it is either live or not. The Site Connectivity Checker will visit the URL at intervals, returning the results of each visit. Instead of manually visiting a URL, a Site Connectivity Checker can do all of that manual work for you. This way, you’ll only get the results of the check without having to spend time on the browser, waiting for the site to go live. Build your own site connectivity checkerWhen you visit a URL, you expect to get the requested pages on your browser. But this is not always the case. Sometimes, sites can be down, so you won’t get the desired results. Instead, you’ll be presented with error messages. You can keep trying a site that is down, till it comes up and you get the information you need. This is where the Site Connectivity Checker project comes in. The Site Connectivity Checker visits a URL and returns the status of the URL: it is either live or not. The Site Connectivity Checker will visit the URL at intervals, returning the results of each visit. Instead of manually visiting a URL, a Site Connectivity Checker can do all of that manual work for you. This way, you’ll only get the results of the check without having to spend time on the browser, waiting for the site to go  Build your own bulk file renamer tool.
Forecast how much it will rain this year. Dataset: http://research.jisao.washington.edu/data_sets/widmann/
Enter a string and the program counts the number of vowels in the text. For added complexity have it report a sum of each vowel found.
Create a program which sits on your desktop and aggregates news and game scores from various sources on the net. It then scrolls them across the screen on regular intervals.
Create an online application for keeping track of a collection of cards. Let the user enter all cards in a set, check off which ones they have, which ones they need and generate lists of cards they are looking for. For extra complexity, have it sum up sets and generate reports on how close they are of completing sets or the current value of a set.
Write an application that keeps track of a household’s budget. The user can add expenses, income, and recurring costs to find out how much they are saving or losing over a period of time. For added complexity allow the user to specify a date range and see the net flow of money in and out of the house budget for that time period.
Make a system that allows users to put together their own little travel itinerary and keep track of the airline / hotel arrangements, points of interest, budget and schedule.
Create a program which can download videos to your hard drive from youtube.com. Save the files in various formats including FLV and AVI.
Create a program to convert JSON files to CSV
Calculating the frequency of words in a block of text is a technique which has various uses in algorithms such as searching, sorting, and semantic analysis. The objective of the Word Frequency app is count the frequency of words in a block of text and create a tabular display of each unique word in the text along with its frequency, in descending order by frequency.



